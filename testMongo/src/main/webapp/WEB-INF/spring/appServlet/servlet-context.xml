<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/WEB-INF/css/" />
	<resources mapping="/js/**" location="/WEB-INF/js/" />
	<resources mapping="/img/**" location="/WEB-INF/img/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
<!-- 	<context:component-scan base-package="com.mongodb.myapp" /> -->
	<context:component-scan base-package="com.peta" />

	
 
 <!-- Tiles --> 
 <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> 
	 <beans:property name="definitions"> 
		 <beans:list> 
		 	<beans:value>/WEB-INF/tiles/tiles.xml</beans:value> 
		 </beans:list> 
	 </beans:property> 
 </beans:bean> 
 <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
	 <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" /> 
	 <beans:property name="order" value="1" /> 
 </beans:bean>

<!-- upload -->
<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<beans:property name="maxUploadSize" value="1048576000"></beans:property>
</beans:bean>

<beans:bean id="uploadPath" class="java.lang.String">
	<beans:constructor-arg value="/usr/local/tomcat/upload"></beans:constructor-arg>
</beans:bean>

<beans:bean id="sampleInterceptor" class="com.peta.interceptor.SampleInterceptor"></beans:bean>

<interceptors>
	<interceptor>
		<mapping path="/doA"/>
		<mapping path="/doB"/>
		<beans:ref bean="sampleInterceptor"/>
	</interceptor>
</interceptors>

<beans:bean id="authInterceptor" class="com.peta.interceptor.AuthInterceptor"></beans:bean>

<beans:bean id="loginInterceptor" class="com.peta.interceptor.LoginInterceptor"></beans:bean>

<beans:bean id="loginAfterInterceptor" class="com.peta.interceptor.LoginAfterInterceptor"></beans:bean>

<beans:bean id="loginRightInterceptor" class="com.peta.interceptor.LoginTilesRight"></beans:bean>


<interceptors>
	<interceptor>
		<mapping path="/user/loginPost"/>
		<beans:ref bean="loginInterceptor"/>
	</interceptor>
	
	<!-- 로그인이 필요한 페이지 목록 -->
	<interceptor>
		<mapping path="/board/register"/>
		<mapping path="/img/register"/>
		<mapping path="/board/modifyPage"/>
		<mapping path="/board/removePage"/>
		<mapping path="/messagelist"/>
		<beans:ref bean="authInterceptor"/>
	</interceptor>
	
	<interceptor>
		<mapping path="/user/login"/>
		<beans:ref bean="loginAfterInterceptor"/>
	</interceptor>
	
	<interceptor>
		<mapping path="/board/list"/>
		<beans:ref bean="loginRightInterceptor"/>
	</interceptor>
</interceptors>





 <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
 <aop:config></aop:config>

</beans:beans>